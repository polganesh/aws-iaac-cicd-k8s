# https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sonarqube-d01-remote
  namespace: argocd
spec:
  # every app belongs to single project
  # if we dont specify then project: default
  project: default
  source:
    path: sonarqube/ # location in git repo
    repoURL: git@github.com:polganesh/sonar-helm.git
    targetRevision: main  #git branch
    helm:
      version: v3  # helm version
      releaseName: sonarqube-d01-remote  #name of release
      values: |
        replicaCount: 1
        image:
          tag: 9.2.4-community
        ingress:
          enabled: true
          hosts:
            - name: sonar.d01.polganesh.net
          annotations:
            kubernetes.io/ingress.class: nginx
#          hosts:
#            - host: sonarqube.d01.polganesh.net
#              paths:
#                - path: /
#                  pathType: ImplementationSpecific
  destination:
    # server: https://kubernetes.default.svc # we are deploying it to same k8s cluster where argo cd installed my-initial-app-nginx
    name: eks-euc1-dev-tech-vpc001-tnet-001
    #server: eks-euc1-dev-tech-vpc001-tnet-001
    namespace: d01
  syncPolicy:
    syncOptions:
    - CreateNamespace=true # ensure that if namespace is not created then create namespace
# by default argo cd is not synch with git repo. in order to automate this synch we need to perform following config
# it will poll changes every 3 minutes not immediately. if we dont want delay then we can configure webhook.
# in other words it will do following. if any person try to update/delte app from command line it will rollback his changes and try to keep config from git only
    automated:
      # self heal will ensure that any changes made manually by kubectl will be overridden by one defined in git repo.
      # it ensure that git is single source of truth
      selfHeal: true
      # help us to synch if any k8s resource (updated/deleted) then argo cd will synch
      prune: true
